BEGIN;
BEGIN
EXPLAIN
select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			ps_suppkey
		from
			partsupp
		where
			ps_partkey in (
				select
					p_partkey
				from
					part
				where
					p_name like 'linen%'
			)
			and ps_availqty > (
				select
					0.5 * sum(l_quantity)
				from
					lineitem
				where
					l_partkey = ps_partkey
					and l_suppkey = ps_suppkey
					and l_shipdate >= '1993-01-01'
					and l_shipdate < cast(date '1993-01-01' + interval '1 year' as date)
			)
	)
	and s_nationkey = n_nationkey
	and n_name = 'FRANCE'
order by
	s_name;
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=11560021.25..11560023.91 rows=1065 width=51)
   Sort Key: supplier.s_name
   ->  Hash Semi Join  (cost=11555476.89..11559967.70 rows=1065 width=51)
         Hash Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
         ->  Nested Loop  (cost=0.00..4430.31 rows=4000 width=55)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                     Filter: (n_name = 'FRANCE'::bpchar)
               ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=59)
         ->  Hash  (cost=11555143.97..11555143.97 rows=26634 width=4)
               ->  Nested Loop  (cost=677.80..11555143.97 rows=26634 width=4)
                     ->  Bitmap Heap Scan on part  (cost=677.80..33178.71 rows=20020 width=4)
                           Filter: ((p_name)::text ~~ 'linen%'::text)
                           ->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.79 rows=18000 width=0)
                                 Index Cond: (((p_name)::text >= 'linen'::text) AND ((p_name)::text < 'lineo'::text))
                     ->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.51 rows=1 width=8)
                           Index Cond: (ps_partkey = part.p_partkey)
                           Filter: ((ps_availqty)::double precision > (SubPlan 1))
                           SubPlan 1
                             ->  Aggregate  (cost=140.92..140.94 rows=1 width=4)
                                   ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.92 rows=1 width=4)
                                         Index Cond: (l_partkey = partsupp.ps_partkey)
                                         Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01'::date) AND (l_suppkey = partsupp.ps_suppkey))
(23 rows)

COMMIT;
COMMIT

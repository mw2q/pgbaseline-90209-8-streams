BEGIN;
BEGIN
EXPLAIN
select
	ps_partkey,
	sum(ps_supplycost * ps_availqty) as value
from
	partsupp,
	supplier,
	nation
where
	ps_suppkey = s_suppkey
	and s_nationkey = n_nationkey
	and n_name = 'VIETNAM'
group by
	ps_partkey having
		sum(ps_supplycost * ps_availqty) > (
			select
				sum(ps_supplycost * ps_availqty) * 0.0000100000
			from
				partsupp,
				supplier,
				nation
			where
				ps_suppkey = s_suppkey
				and s_nationkey = n_nationkey
				and n_name = 'VIETNAM'
		)
order by
	value desc;
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=135989.59..136789.59 rows=320000 width=12)
   Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::double precision)))
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=49764.62..49764.63 rows=1 width=8)
           ->  Nested Loop  (cost=79.26..47364.62 rows=320000 width=8)
                 ->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'VIETNAM'::bpchar)
                       ->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8)
                             Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                             ->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0)
                                   Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.00..10.44 rows=80 width=12)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  HashAggregate  (cost=52964.62..56964.62 rows=320000 width=12)
         Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::double precision)) > $2)
         ->  Nested Loop  (cost=79.26..47364.62 rows=320000 width=12)
               ->  Nested Loop  (cost=79.26..2391.58 rows=4000 width=4)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'VIETNAM'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=79.26..2350.26 rows=4000 width=8)
                           Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                           ->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_idx  (cost=0.00..78.26 rows=4000 width=0)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
               ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.00..10.44 rows=80 width=16)
                     Index Cond: (ps_suppkey = public.supplier.s_suppkey)
(26 rows)

COMMIT;
COMMIT
